{
  "{\"sourceRoot\":\"/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard\",\"filename\":\"/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard",
      "filename": "/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard/app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//import mongodb from 'mongodb';\nvar MongoClient = require('mongodb').MongoClient;\n\nvar port = 3300;\nvar app = (0, _express.default)();\nvar db;\nvar mongourl = 'mongodb://127.0.0.1:27017/';\nvar col_name = 'userlist';\napp.use(_bodyParser.default.urlencoded({\n  extended: true\n}));\napp.use(_bodyParser.default.json());\napp.post('/addData', function (req, res) {\n  db.collection(col_name).insert(req.body, function (err, result) {\n    if (err) throw err;\n    console.log('data.inserted');\n  });\n});\napp.post('/find_by_name', function (req, res) {\n  var name = req.body.name;\n  db.collection(col_name).find({\n    name: name\n  }).toArray(function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n});\napp.get('/', function (req, res) {\n  db.collection(col_name).find().toArray(function (err, result) {\n    if (err) throw err;\n    res.send(result);\n  });\n});\n/*app.listen(port, (err)=> {\n    console.log(`server on port ${port}`)\n})*/\n\nMongoClient.connect(mongourl, function (err, client) {\n  if (err) throw err;\n  db = client.db('march_dashboard');\n  app.listen(port, function () {\n    console.log(\"Server running on port \".concat(port));\n  });\n});\n/*{name:\"john\",email:'j@j.com',phone:1234}*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJNb25nb0NsaWVudCIsInJlcXVpcmUiLCJwb3J0IiwiYXBwIiwiZGIiLCJtb25nb3VybCIsImNvbF9uYW1lIiwidXNlIiwiYm9keVBhcnNlciIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImpzb24iLCJwb3N0IiwicmVxIiwicmVzIiwiY29sbGVjdGlvbiIsImluc2VydCIsImJvZHkiLCJlcnIiLCJyZXN1bHQiLCJjb25zb2xlIiwibG9nIiwibmFtZSIsImZpbmQiLCJ0b0FycmF5Iiwic2VuZCIsImdldCIsImNvbm5lY3QiLCJjbGllbnQiLCJsaXN0ZW4iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBR0E7Ozs7QUFGQTtBQUNBLElBQU1BLFdBQVcsR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBUCxDQUFtQkQsV0FBdkM7O0FBRUEsSUFBTUUsSUFBSSxHQUFHLElBQWI7QUFDQSxJQUFNQyxHQUFHLEdBQUcsdUJBQVo7QUFDQSxJQUFJQyxFQUFKO0FBQ0EsSUFBTUMsUUFBUSxHQUFHLDRCQUFqQjtBQUNBLElBQU1DLFFBQVEsR0FBRyxVQUFqQjtBQUVBSCxHQUFHLENBQUNJLEdBQUosQ0FBUUMsb0JBQVdDLFVBQVgsQ0FBc0I7QUFBQ0MsRUFBQUEsUUFBUSxFQUFDO0FBQVYsQ0FBdEIsQ0FBUjtBQUNBUCxHQUFHLENBQUNJLEdBQUosQ0FBUUMsb0JBQVdHLElBQVgsRUFBUjtBQUdBUixHQUFHLENBQUNTLElBQUosQ0FBUyxVQUFULEVBQXFCLFVBQUNDLEdBQUQsRUFBS0MsR0FBTCxFQUFhO0FBQzlCVixFQUFBQSxFQUFFLENBQUNXLFVBQUgsQ0FBY1QsUUFBZCxFQUNLVSxNQURMLENBQ1lILEdBQUcsQ0FBQ0ksSUFEaEIsRUFDc0IsVUFBQ0MsR0FBRCxFQUFLQyxNQUFMLEVBQWdCO0FBQzlCLFFBQUdELEdBQUgsRUFBUSxNQUFNQSxHQUFOO0FBQ1JFLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGVBQVo7QUFDSCxHQUpMO0FBS0gsQ0FORDtBQVFBbEIsR0FBRyxDQUFDUyxJQUFKLENBQVMsZUFBVCxFQUF5QixVQUFDQyxHQUFELEVBQUtDLEdBQUwsRUFBYTtBQUNsQyxNQUFJUSxJQUFJLEdBQUdULEdBQUcsQ0FBQ0ksSUFBSixDQUFTSyxJQUFwQjtBQUNBbEIsRUFBQUEsRUFBRSxDQUFDVyxVQUFILENBQWNULFFBQWQsRUFDR2lCLElBREgsQ0FDUTtBQUFDRCxJQUFBQSxJQUFJLEVBQUNBO0FBQU4sR0FEUixFQUVHRSxPQUZILENBRVcsVUFBQ04sR0FBRCxFQUFLQyxNQUFMLEVBQWdCO0FBQ3JCLFFBQUdELEdBQUgsRUFBUSxNQUFNQSxHQUFOO0FBQ1JKLElBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTTixNQUFUO0FBQ0gsR0FMSDtBQU1ILENBUkQ7QUFVQWhCLEdBQUcsQ0FBQ3VCLEdBQUosQ0FBUSxHQUFSLEVBQWEsVUFBQ2IsR0FBRCxFQUFLQyxHQUFMLEVBQVc7QUFDcEJWLEVBQUFBLEVBQUUsQ0FBQ1csVUFBSCxDQUFjVCxRQUFkLEVBQXdCaUIsSUFBeEIsR0FBK0JDLE9BQS9CLENBQXVDLFVBQUNOLEdBQUQsRUFBS0MsTUFBTCxFQUFnQjtBQUNuRCxRQUFHRCxHQUFILEVBQVEsTUFBTUEsR0FBTjtBQUNSSixJQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBU04sTUFBVDtBQUNILEdBSEQ7QUFJSCxDQUxEO0FBT0E7Ozs7QUFHQW5CLFdBQVcsQ0FBQzJCLE9BQVosQ0FBb0J0QixRQUFwQixFQUE2QixVQUFDYSxHQUFELEVBQUtVLE1BQUwsRUFBZ0I7QUFDekMsTUFBR1YsR0FBSCxFQUFRLE1BQU1BLEdBQU47QUFDUmQsRUFBQUEsRUFBRSxHQUFHd0IsTUFBTSxDQUFDeEIsRUFBUCxDQUFVLGlCQUFWLENBQUw7QUFDQUQsRUFBQUEsR0FBRyxDQUFDMEIsTUFBSixDQUFXM0IsSUFBWCxFQUFpQixZQUFLO0FBQ2xCa0IsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLGtDQUFzQ25CLElBQXRDO0FBQ0gsR0FGRDtBQUdILENBTkQ7QUFRQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvYXZpL0Rlc2t0b3AvQ2xhc3Nlcy9GZWJfTm9kZV9tcm5nL2Rhc2hib2FyZCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuLy9pbXBvcnQgbW9uZ29kYiBmcm9tICdtb25nb2RiJztcbmNvbnN0IE1vbmdvQ2xpZW50ID0gcmVxdWlyZSgnbW9uZ29kYicpLk1vbmdvQ2xpZW50O1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuY29uc3QgcG9ydCA9IDMzMDA7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5sZXQgZGI7XG5jb25zdCBtb25nb3VybCA9ICdtb25nb2RiOi8vMTI3LjAuMC4xOjI3MDE3LydcbmNvbnN0IGNvbF9uYW1lID0gJ3VzZXJsaXN0JztcblxuYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoe2V4dGVuZGVkOnRydWV9KSk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuXG5hcHAucG9zdCgnL2FkZERhdGEnLCAocmVxLHJlcykgPT4ge1xuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpXG4gICAgICAgIC5pbnNlcnQocmVxLmJvZHksIChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgICAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdkYXRhLmluc2VydGVkJyk7XG4gICAgICAgIH0pXG59KVxuXG5hcHAucG9zdCgnL2ZpbmRfYnlfbmFtZScsKHJlcSxyZXMpID0+IHtcbiAgICBsZXQgbmFtZSA9IHJlcS5ib2R5Lm5hbWU7XG4gICAgZGIuY29sbGVjdGlvbihjb2xfbmFtZSlcbiAgICAgIC5maW5kKHtuYW1lOm5hbWV9KVxuICAgICAgLnRvQXJyYXkoKGVycixyZXN1bHQpID0+IHtcbiAgICAgICAgICBpZihlcnIpIHRocm93IGVycjtcbiAgICAgICAgICByZXMuc2VuZChyZXN1bHQpXG4gICAgICB9KVxufSlcblxuYXBwLmdldCgnLycsIChyZXEscmVzKT0+e1xuICAgIGRiLmNvbGxlY3Rpb24oY29sX25hbWUpLmZpbmQoKS50b0FycmF5KChlcnIscmVzdWx0KSA9PiB7XG4gICAgICAgIGlmKGVycikgdGhyb3cgZXJyO1xuICAgICAgICByZXMuc2VuZChyZXN1bHQpXG4gICAgfSlcbn0pXG5cbi8qYXBwLmxpc3Rlbihwb3J0LCAoZXJyKT0+IHtcbiAgICBjb25zb2xlLmxvZyhgc2VydmVyIG9uIHBvcnQgJHtwb3J0fWApXG59KSovXG5Nb25nb0NsaWVudC5jb25uZWN0KG1vbmdvdXJsLChlcnIsY2xpZW50KSA9PiB7XG4gICAgaWYoZXJyKSB0aHJvdyBlcnI7XG4gICAgZGIgPSBjbGllbnQuZGIoJ21hcmNoX2Rhc2hib2FyZCcpXG4gICAgYXBwLmxpc3Rlbihwb3J0LCAoKT0+IHtcbiAgICAgICAgY29uc29sZS5sb2coYFNlcnZlciBydW5uaW5nIG9uIHBvcnQgJHtwb3J0fWApXG4gICAgfSlcbn0pXG5cbi8qe25hbWU6XCJqb2huXCIsZW1haWw6J2pAai5jb20nLHBob25lOjEyMzR9Ki9cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "MongoClient",
        "require",
        "port",
        "app",
        "db",
        "mongourl",
        "col_name",
        "use",
        "bodyParser",
        "urlencoded",
        "extended",
        "json",
        "post",
        "req",
        "res",
        "collection",
        "insert",
        "body",
        "err",
        "result",
        "console",
        "log",
        "name",
        "find",
        "toArray",
        "send",
        "get",
        "connect",
        "client",
        "listen"
      ],
      "mappings": ";;AAAA;;AAGA;;;;AAFA;AACA,IAAMA,WAAW,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,WAAvC;;AAEA,IAAME,IAAI,GAAG,IAAb;AACA,IAAMC,GAAG,GAAG,uBAAZ;AACA,IAAIC,EAAJ;AACA,IAAMC,QAAQ,GAAG,4BAAjB;AACA,IAAMC,QAAQ,GAAG,UAAjB;AAEAH,GAAG,CAACI,GAAJ,CAAQC,oBAAWC,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAC;AAAV,CAAtB,CAAR;AACAP,GAAG,CAACI,GAAJ,CAAQC,oBAAWG,IAAX,EAAR;AAGAR,GAAG,CAACS,IAAJ,CAAS,UAAT,EAAqB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAC9BV,EAAAA,EAAE,CAACW,UAAH,CAAcT,QAAd,EACKU,MADL,CACYH,GAAG,CAACI,IADhB,EACsB,UAACC,GAAD,EAAKC,MAAL,EAAgB;AAC9B,QAAGD,GAAH,EAAQ,MAAMA,GAAN;AACRE,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,GAJL;AAKH,CAND;AAQAlB,GAAG,CAACS,IAAJ,CAAS,eAAT,EAAyB,UAACC,GAAD,EAAKC,GAAL,EAAa;AAClC,MAAIQ,IAAI,GAAGT,GAAG,CAACI,IAAJ,CAASK,IAApB;AACAlB,EAAAA,EAAE,CAACW,UAAH,CAAcT,QAAd,EACGiB,IADH,CACQ;AAACD,IAAAA,IAAI,EAACA;AAAN,GADR,EAEGE,OAFH,CAEW,UAACN,GAAD,EAAKC,MAAL,EAAgB;AACrB,QAAGD,GAAH,EAAQ,MAAMA,GAAN;AACRJ,IAAAA,GAAG,CAACW,IAAJ,CAASN,MAAT;AACH,GALH;AAMH,CARD;AAUAhB,GAAG,CAACuB,GAAJ,CAAQ,GAAR,EAAa,UAACb,GAAD,EAAKC,GAAL,EAAW;AACpBV,EAAAA,EAAE,CAACW,UAAH,CAAcT,QAAd,EAAwBiB,IAAxB,GAA+BC,OAA/B,CAAuC,UAACN,GAAD,EAAKC,MAAL,EAAgB;AACnD,QAAGD,GAAH,EAAQ,MAAMA,GAAN;AACRJ,IAAAA,GAAG,CAACW,IAAJ,CAASN,MAAT;AACH,GAHD;AAIH,CALD;AAOA;;;;AAGAnB,WAAW,CAAC2B,OAAZ,CAAoBtB,QAApB,EAA6B,UAACa,GAAD,EAAKU,MAAL,EAAgB;AACzC,MAAGV,GAAH,EAAQ,MAAMA,GAAN;AACRd,EAAAA,EAAE,GAAGwB,MAAM,CAACxB,EAAP,CAAU,iBAAV,CAAL;AACAD,EAAAA,GAAG,CAAC0B,MAAJ,CAAW3B,IAAX,EAAiB,YAAK;AAClBkB,IAAAA,OAAO,CAACC,GAAR,kCAAsCnB,IAAtC;AACH,GAFD;AAGH,CAND;AAQA",
      "sourceRoot": "/Users/avi/Desktop/Classes/Feb_Node_mrng/dashboard",
      "sourcesContent": [
        "import express from 'express';\n//import mongodb from 'mongodb';\nconst MongoClient = require('mongodb').MongoClient;\nimport bodyParser from 'body-parser';\nconst port = 3300;\nconst app = express();\nlet db;\nconst mongourl = 'mongodb://127.0.0.1:27017/'\nconst col_name = 'userlist';\n\napp.use(bodyParser.urlencoded({extended:true}));\napp.use(bodyParser.json());\n\n\napp.post('/addData', (req,res) => {\n    db.collection(col_name)\n        .insert(req.body, (err,result) => {\n            if(err) throw err;\n            console.log('data.inserted');\n        })\n})\n\napp.post('/find_by_name',(req,res) => {\n    let name = req.body.name;\n    db.collection(col_name)\n      .find({name:name})\n      .toArray((err,result) => {\n          if(err) throw err;\n          res.send(result)\n      })\n})\n\napp.get('/', (req,res)=>{\n    db.collection(col_name).find().toArray((err,result) => {\n        if(err) throw err;\n        res.send(result)\n    })\n})\n\n/*app.listen(port, (err)=> {\n    console.log(`server on port ${port}`)\n})*/\nMongoClient.connect(mongourl,(err,client) => {\n    if(err) throw err;\n    db = client.db('march_dashboard')\n    app.listen(port, ()=> {\n        console.log(`Server running on port ${port}`)\n    })\n})\n\n/*{name:\"john\",email:'j@j.com',phone:1234}*/\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1553225585224
  }
}